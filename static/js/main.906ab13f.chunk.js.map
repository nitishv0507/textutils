{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","Textform","text","setText","useState","Fragment","style","color","heading","value","onChange","e","console","log","target","backgroundColor","rows","handleUpperCase","newText","toUpperCase","showAlert","handleLowerCase","toLowerCase","handleClearText","handleCopy","document","getElementById","select","navigator","clipboard","writeText","removeExtraSpace","split","join","length","Alert","alert","class","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.906ab13f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} bg-body-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\"> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\"> */}\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link> */}\r\n              {/* <a className=\"nav-link\" href=\"/about\">\r\n                  {props.aboutText}\r\n                </a> */}\r\n              {/* </li> */}\r\n            </ul>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                onClick={props.toggleMode}\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Darkmode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\n// if you not pass any prop types to navbar then it takes default prop\r\nNavbar.defaultProps = {\r\n  title: \"Textutils\",\r\n  aboutText: \"About us\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handleUpperCase = () => {\r\n    console.log(\"clicked button\");\r\n    setText(\"Your text area is updated\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\", \"Success\");\r\n  };\r\n\r\n  const handleLowerCase = () => {\r\n    console.log(\"clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\", \"Success\");\r\n  };\r\n\r\n  const handleChangeTextArea = (e) => {\r\n    console.log(\"onchange\");\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleClearText = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"All text are clear!\", \"Success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    const text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Coppied\", \"Success\");\r\n  };\r\n\r\n  const removeExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\"\"));\r\n    props.showAlert(\"Extra spaces are removed\", \"Success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            value={text}\r\n            onChange={handleChangeTextArea}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpperCase}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowerCase}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearText}>\r\n          clear text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n          Copy text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={removeExtraSpace}>\r\n          Remove extra space\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container my-4\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          {text === \"\" ? text.split(\" \").length - 1 : text.split(\" \").length}{\" \"}\r\n          Words and {text.length} Characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the textbox to preview here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"; this is not working because new version is comming so bellow line is work.\n// import { BrowserRouter,Routes, Route } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"Success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"Success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Navbar title=\"textutils\" aboutText=\"about\" /> */}\n      <div className=\"container my-5\">\n        {/* <BrowserRouter> */}\n        <Navbar title=\"textutils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        {/* <Routes> */}\n        {/* <Route exact path=\"/about\" element={<About/>}></Route> */}\n        {/* <Route exact path=\"/\" element={<Textform showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>}></Route> */}\n        {/* </Routes> */}\n        {/* </BrowserRouter>       */}\n        <Textform\n          showAlert={showAlert}\n          heading=\"Enter the text to analyze\"\n          mode={mode}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}